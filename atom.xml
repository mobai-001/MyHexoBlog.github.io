<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Mobai&#39;s Station</title>
  
  <subtitle>Mobai&#39;s Station</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-02-25T12:05:38.991Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Mobai</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo+Github博客搭建教程</title>
    <link href="http://example.com/2022/02/25/1/"/>
    <id>http://example.com/2022/02/25/1/</id>
    <published>2022-02-25T12:01:21.316Z</published>
    <updated>2022-02-25T12:05:38.991Z</updated>
    
    <content type="html"><![CDATA[<pre><code>code</code></pre>]]></content>
    
    
    <summary type="html">Hexo+Github博客搭建教程</summary>
    
    
    
    <category term="教程" scheme="http://example.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
  </entry>
  
  <entry>
    <title>Hexo+Github博客搭建教程</title>
    <link href="http://example.com/2021/10/06/Hexo+Github%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/"/>
    <id>http://example.com/2021/10/06/Hexo+Github%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/</id>
    <published>2021-10-06T03:14:22.738Z</published>
    <updated>2022-02-20T10:22:41.889Z</updated>
    
    <content type="html"><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>这篇文章是作者重新制作博客时写的，内容较新<br>如果此文已不适用于新版本，请大家在评论区告诉我，我会更新文章<br>阅读此文如有问题，请在评论区提问，我会一一回答，谢谢支持！</p><hr><h1 id="安装Node-js和Git"><a href="#安装Node-js和Git" class="headerlink" title="安装Node.js和Git"></a>安装Node.js和Git</h1><h3>下载Node.js</h3>访问官网：https://nodejs.org/en/点击14.18.0 LTS Recommended For Most Users<p><a href="https://postimg.cc/S2KXQZH9"><img src="https://i.postimg.cc/9MdypKpL/1.png" alt="1.png"></a></p><p>我这里下载的是64位的<br>安装选项全部默认（安装路径可以自己调整），一路点击Next<br>注意了！如果你改了安装路径，你需要手动把Node.js和npm添加到环境变量里，这必须要做！<br>安装好之后，按Win+R打开命令提示符，输入node -v和npm -v，如果出现版本号，那么就安装成功了<br>再添加一下镜像源（加速下载）<br>打开CMD，输入<code>npm config set registry https://registry.npm.taobao.org</code><br>设置成阿里的国内镜像</p><h3>安装Git</h3>为了把本地的网页文件上传到GitHub上面去，我们需要用到分布式版本控制工具————Git访问官网：https://git-scm.com/download/win选择版本，我这里选的是64x的安装选项还是全部默认，安装目录可以自己改注意了！如果你改了安装目录，请手动把Git添加进环境变量里！安装完成后在命令提示符中输入git --version验证是否安装成功<hr><h1 id="新建GitHub仓库"><a href="#新建GitHub仓库" class="headerlink" title="新建GitHub仓库"></a>新建GitHub仓库</h1><p>啊，如果还没有GitHub账号，是时候去注册一个了，有大用处，注册方法我就不说了<br>接下来就去新建一个仓库，用来存放我们的博客<br>访问官网：<a href="https://github.com/">https://github.com/</a><br>可能访问得比较慢，耐心等下吧<br>新建一个仓库，如下图所示：</p><p><a href="https://postimg.cc/1nfMbKRm"><img src="https://i.postimg.cc/63hS2HDv/2.png" alt="2.png"></a></p><p>然后，输入自己的仓库名称，后面一定要加.github.io后缀，Add a README file初始化也要勾上</p><p><a href="https://postimg.cc/HJQySZyD"><img src="https://i.postimg.cc/q7FxvWBR/3.png" alt="3.png"></a></p><p>最后点Create repository就好了<br>进入你的仓库，点击Settings</p><p><a href="https://postimg.cc/dZv3hwHL"><img src="https://i.postimg.cc/PJvwFq1z/4.png" alt="4.png"></a></p><p>再点击Pages</p><p><a href="https://postimg.cc/bDqdJqFd"><img src="https://i.postimg.cc/gJZhgJVy/5.png" alt="5.png"></a></p><p>点击Choose a theme选择一个主题</p><p><a href="https://postimg.cc/Yv1pmJFF"><img src="https://i.postimg.cc/vZKDCyH0/6.png" alt="6.png"></a></p><p>选一个你喜欢的主题，点Select theme<br>会弹出一个新界面，下拉到最后，点那个绿色的按钮（因为作者忘记了它叫什么名字，所以这么写，哈哈）<br>然后等一会儿，再回到GitHub Pages，会变成下面这样：</p><p><a href="https://postimg.cc/bSz63SV8"><img src="https://i.postimg.cc/sxWtfppB/7.png" alt="7.png"></a></p><p>然后点击那个蓝色的链接，就可以看到自己的博客啦</p><hr><h1 id="初始化博客（本地）"><a href="#初始化博客（本地）" class="headerlink" title="初始化博客（本地）"></a>初始化博客（本地）</h1><p>在合适的地方新建一个文件夹，用来存放自己的博客文件<br>在该目录下右键点击Git Bash Here，打开Git的控制台窗口，以后我们所有的操作都在Git Bash进行，就不要用Windows自带的CMD了<br>输入<code>npm i hexo-cli -g</code>安装Hexo<br>安装完后输入<code>hexo -v</code>验证是否安装成功<br>然后就要初始化我们的博客，输入<code>hexo init</code>初始化文件夹，接着输入<code>npm install</code>安装必备的组件<br>这样本地的网站配置也弄好啦，输入<code>hexo clean</code>，再输入<code>hexo g</code>生成静态网页，然后输入<code>hexo s</code>打开本地服务器，然后浏览器打开<a href="http://localhost:4000/%EF%BC%8C%E5%B0%B1%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%88%B0%E6%88%91%E4%BB%AC%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%95%A6">http://localhost:4000/，就可以看到我们的博客啦</a><br>（在Git Bash中）按ctrl+c可以关闭本地服务器</p><hr><h1 id="连接Github与本地"><a href="#连接Github与本地" class="headerlink" title="连接Github与本地"></a>连接Github与本地</h1><p>首先右键打开Git Bash，然后输入下面命令<br>git config –global user.name “你的GitHub用户名”<br>git config –global user.email “你的邮箱，最好是注册GitHub时用的”<br>再输入<br>ssh-keygen -t rsa -C “你的邮箱，最好是注册GitHub时用的”<br>打开GitHub，点击头像，在下面菜单里点击settings，再点击SSH and GPG keys，点击New SSH key新建一个SSH，名字随便<br>Git Bash中输入<br>cat ~/.ssh/id_rsa.pub<br>将输出的内容复制到刚刚SSH Key的框中，点击确定保存<br>输入<code>ssh -T git@github.com</code>，如果如下图所示，出现你的用户名，那就成功了</p><p><a href="https://postimg.cc/R33SPN6k"><img src="https://i.postimg.cc/q7wNvKkv/8.png" alt="8.png"></a></p><p>然后打开博客根目录下的_config.yml文件，这是博客的配置文件，在这里你可以修改与博客相关的各种信息<br>修改最后一行的配置：</p><pre><code>deploy:  type: git  repository: 你的仓库的网页地址  branch: 你的仓库的一个分支</code></pre><p>注意了！此配置文件冒号后面必须有空格，否则会报错！</p><hr><h1 id="写文章、发布文章"><a href="#写文章、发布文章" class="headerlink" title="写文章、发布文章"></a>写文章、发布文章</h1><p>首先在博客根目录下右键打开Git Bash，输入<code>npm i hexo-deployer-git</code>和<code>npm install --save hexo-renderer-jade hexo-generator-feed hexo-generator-sitemap hexo-browsersync hexo-generator-archive</code>安装两个扩展<br>然后输入<code>hexo new post &quot;文章的名字&quot;</code>，新建一篇文章<br>打开\（博客根目录）\source_posts的目录，可以发现里面多了一个.md文件，这就是你的文章文件啦<br>编写完MarkDown文件后，根目录下打开Git Bash输入<code>hexo clean</code>，再输入<code>hexo g</code>生成静态网页，然后输入<code>hexo s</code>可以本地预览效果，最后输入<code>hexo d</code>上传到GitHub上<br>这时等一会（Git Pages要时间加载）打开你的github.io主页就能看到发布的文章啦</p><hr><h1 id="安装主题（Butterfly）"><a href="#安装主题（Butterfly）" class="headerlink" title="安装主题（Butterfly）"></a>安装主题（Butterfly）</h1><p>首先安装Cheerio，打开Git Bash，输入<code>npm install cheerio@0.22.0 --save</code><br>安装Dev分支，输入<code>git clone -b dev https://github.com/jerryc127/hexo-theme-butterfly.git themes/Butterfly</code><br>等待克隆完成即可</p><hr><h1 id="平滑升级"><a href="#平滑升级" class="headerlink" title="平滑升级"></a>平滑升级</h1><p>注意了，这一步必须做，不然可能报错<br>首先，把主题默认的配置文件（在主题目录里 -&gt; \（博客根目录）\themes\hexo-theme-butterfly）_config.yml<br>复制到博客根目录下的source/_data/目录里，没有_data目录就新建一个<br>然后把此文件重命名为_config.butterfly.yml<br>注意了，它将会替换主题（是主题！不是博客配置文件！）默认配置文件_config.yml里的配置项（是替换！）<br>之后你就只需要通过在Git Bash里输入<code>git pull</code>的方式就可以平滑地升级Butterfly主题了</p><hr><h1 id="启用主题"><a href="#启用主题" class="headerlink" title="启用主题"></a>启用主题</h1><p>修改博客根目录下的配置文件_config.yml：</p><pre><code>theme: Butterfly</code></pre><p>下载Pug及Stylus的渲染器，打开Git Bash，输入<code>npm install hexo-renderer-pug hexo-renderer-stylus --save or yarn add hexo-renderer-pug hexo-renderer-stylus</code><br>注意了，渲染器必须下载，否则一定会报错</p><hr><h1 id="新文章配置"><a href="#新文章配置" class="headerlink" title="新文章配置"></a>新文章配置</h1><p>在新建了Md文档后，需要对它配置一下<br>打开你新建的Md文档，删除里面的所有字符（注意，是所有！）<br>然后把下列Code复制到里面</p><pre><code>---title: # 文章标题date: # 写此文的时间tags: # 文章标签categories: # 文章所属的分类keywords: # 搜索关键词description: # 文章描述top_img: # 设置文章顶部图comments: # 是否显示评论（默认为true，除非设置为false，可以不写）cover: # 文章在主页显示的缩略图toc: # 是否显示目录（除非特定文章设置，可以不写）toc_number: # 是否显示目录的数字（除非特定文章设置，可以不写）copyright: # 是否显示版权（除非特定文章设置，可以不写）mathjax: # 是否每一页都加载mathjax，是填true，否填falsekatex: # 可以不写hide: # 文章是否隐藏---</code></pre><hr><h1 id="设置博客标签页"><a href="#设置博客标签页" class="headerlink" title="设置博客标签页"></a>设置博客标签页</h1><p>首先进入你的博客根目录<br>打开Git Bash，输入<code>hexo new page tags</code><br>你会找到/（博客根目录）/source/tags/index.md这个文件<br>修改这个文件为：</p><pre><code>---title: 标签date: # 你创建这个文件的时间，格式为：年-月-日 时:分:秒type: "tags"---</code></pre><hr><h1 id="设置博客分类页"><a href="#设置博客分类页" class="headerlink" title="设置博客分类页"></a>设置博客分类页</h1><p>进入你的博客根目录<br>打开Git Bash，输入<code>hexo new page categories</code><br>你会找到/（博客根目录）/source/categories/index.md这个文件<br>修改这个文件为：</p><pre><code>---title: 分类date: # 你创建这个文件的时间，格式为：年-月-日 时:分:秒type: "categories"---</code></pre><hr><h1 id="设置博客的友情链接"><a href="#设置博客的友情链接" class="headerlink" title="设置博客的友情链接"></a>设置博客的友情链接</h1><h3>创建友链界面</h3>进入你的博客根目录打开Git Bash，输入`hexo new page link`你会找到/（博客根目录）/source/link/index.md这个文件修改这个文件为：<pre><code>---title: 友情链接date: # 你创建这个文件的时间，格式为：年-月-日 时:分:秒type: "link"---</code></pre><h3>添加友链</h3>在/（博客根目录）/source/_data里创建一个文件link.yml在里面加入以下Code：<pre><code>class:  class_name: 友情链接  link_list:    1:      name: # 你的博客名字      link: # 你的博客的网址      avatar: # 你的头像链接（上传在图床上的头像链接）      descr: # 你的个性签名    2:      # 你可以照着上面的样子自行添加</code></pre><h3>友情链接界面设置</h3>打开/（博客根目录）/source/_data/打开_config.butterfly.yml，在末尾添加：<pre><code>Flink:  headline: 友情链接  info_headline: 我的博客资料  name: 博客名： # 你的博客名  address: 博客网址： # 你的博客网址  avatar: 博客头像： # 你的头像链接（上传在图床上的头像链接）  info: 博客简介： # 你的博客简介  comment: 如果需要交换友链,请留言</code></pre><hr><h1 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h1><h3>设置中文</h3>打开博客根目录下的_config.yml文件把`language: en`改为`language: zh-CN`<h3>添加博客资料</h3>打开博客根目录下的_config.yml文件修改：<pre><code>title: # 你的博客名subtitle: # 你的博客名，加单引号description: # 你的个性签名keywords: # 关键词，可以不写author: # 你的名字language: zh-CNtimezone: # 时区，可以不写email: # 邮箱，可以不写</code></pre>打开_config.butterfly.yml，配置：<pre><code>avatar:  img: # 你的头像链接（上传在图床上的头像链接）  effect: false</code></pre>继续配置：<pre><code>  card_announcement:    enable: true    content: # 你的博客的公告</code></pre><h3>设置博客导航菜单</h3>打开_config.butterfly.yml文件修改：<pre><code>menu:  Home: / || fa fa-home  Archives: /archives/ || fa fa-archive  Tags: /tags/ || fa fa-tags  Categories: /categories/ || fa fa-folder-open  Link: /link/ || fa fa-link  About: /about/ || fa fa-heart  #List||fa fa-list:   # - Music || /music/ || fa fa-music   # - Movie || /movies/ || fa fa-film</code></pre><h3>设置代码高亮</h3>配置_config.butterfly.yml文件：<pre><code>highlight_theme: light #代码高亮主题highlight_copy: true #代码是否启用复制功能highlight_shrink: false #true代码框不展开，需点击 '>' 打开 false展开 none不显示'>'按钮，代码块展开</code></pre>代码高亮用法：（emm，直接把Code放上去有点问题，小伙伴们还是自行百度吧）<hr><h1 id="设置顶部图"><a href="#设置顶部图" class="headerlink" title="设置顶部图"></a>设置顶部图</h1><h3>主页顶部图</h3>主页的顶部图可以在_config.butterfly.yml里设置index_img<h3>归档页顶部图</h3>主页的顶部图可以在_config.butterfly.yml里设置archive_img]]></content>
    
    
    <summary type="html">Hexo+Github博客搭建教程</summary>
    
    
    
    <category term="教程" scheme="http://example.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
  </entry>
  
</feed>
